ทำโจทย์ 2 ข้อ
1. print star เช่นใส่ 3 ได้
   *
   **
   ***

2. รับ slice เช่น [2, 3, 4, 5] แล้ว filter ให้เหลือแต่เลขคู่ [2, 4]

empty interface คล้าย class object ของ Java ที่ใหญ่สุด
var v interface{}
    v = "Hello"
    s := v.(string) <- syntax ไว้ convert เป็น type อื่น (ต่างจากตัวแปรที่ใช้ int(ชื่อตัวแปร))
    fmt.Println(s)

type switch ตัว Println ก็ใช้ (รับ input เป็น empty interface)

- folder structure
.
├── cmd
│   ├── add.go
│   ├── delete.go
│   ├── edit.go
│   ├── list.go
│   ├── new.go
│   ├── root.go
│   └── show.go
├── go.mod
├── go.sum
├── main.go
└── todo
    ├── todo.go
    └── todo_test.go

ตัวอย่าง พวก file ใน folder todo / cmd ก็จะถูก define package ชื่อตาม folder นั้น

func เมจิกชื่อ init มันจะถูก call จังหวะโดน import

แบบฝึกหัด (แก้ code ให้ test ผ่าน)
https://github.com/cdarwin/go-koans

เรื่องของ Goroutine และ channel
ตัวอย่างที่น่าสนใจ
c := make(chan int)
	c <- 10
	<-c
ติด deadlock เพราะบรรทัด c <- 10 มัน block (ไปไม่ถึง <-c) ต้องย้าย c <- 10 ไป Goroutine อื่นก่อน

func sender(n int, c chan int) {
	c <- 10
}

c := make(chan int)
	go sender(10, c)
	<-c

เรื่องของ Select
- ถ้าเกิดมี ch เสร็จพร้อมกันเป๊ะๆ 2 อัน มันจะเลือกทำ 1 อันแบบสุ่ม

ตัวอย่าง 2
for {
        select {
        case t := <-chOneSec:
            fmt.Println("From one second sender:", t)
        case t := <-chFiveSec:
            fmt.Println("From five second sender:", t)
        case <-ctx.Done():
            return
        }
}
จังหวะ 5 วินาที: จะสุ่มพ่นจาก case chOneSec/chFiveSec แต่เนื่องจากมันอยู่ใน for ดังนั้น loop ต่อไปก็จะพ่นอีกอันออกทันทีอยู่ดี

เรื่องของ package sync.Mutex
ดูตัวอย่าง wordcount เอา lock จังหวะ increment กับตอน print

ใช้ done chan struct{} กับ channel trick บอกว่าวน loop จบแล้ว
ทำไมใช้ struct{} เพราะใช้ memory size = 0 ประหยัดสุด

sync.WaitGroup ใช้แทนท่ารอ empty struct ดีกว่า
บาง func ไปใช้ของเรา แต่ไม่มี WaitGroup.Done() ให้ ก็ wrap ด้วย
func (){
   defer waitGroup.Done()
   someFunction()
}()

มีตัวอย่าง program ให้อ่าน code เล่นๆ
- web crawler
- chat server

เวลา build go ปรับให้ build ข้าม platform กันได้ รวมถึง check target platform ก่อน build ได้
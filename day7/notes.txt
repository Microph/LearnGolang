slide
https://talks.godoc.org/github.com/iporsut/gotraining-slide/day7.slide#1

เขียน test

go test command ถ้ามี -v จะ print แสดงเป็นเคสๆ ให้ด้วย

non standard package ชื่อ testify ช่วยให้เขียนง่ายขึ้น (เช่น มีพวก assert ให้)

Example Test เขียนแล้วมันจะไปแสดงใน doc example code ให้ด้วย

test http มี 2 ท่า
1. ปั้น input แล้ว call func ตรงๆ (ดู TestAddHandler)
2. mock new server โดย add func handler ที่ต้องการเทสลงไป แล้วลอง call จริง (ดู TestSubHandler) มักใช้เทสกรณี call 3rd party

test http router
ปกติ http.Handle ใช้ feature ของ type http.ServeMux ในการ routing จาก request ไปหา Handler ที่ถูกต้อง
ถ้าจะ test routing หลายๆ ตัว ก็แนะนำให้ทำแบบตัวอย่าง method TestRouter
1. set route ก่อน ด้วย http.HandleFunc
2. แล้วค่อย httptest.NewServer(http.DefaultServeMux) = สร้างเซิฟโดยไม่ map route เพิ่ม

Test แบบต่อ dependency (เช่น db): ทำ interface คั่นแล้ว inject dependency ปลอมนั้นไป (เช่น handler)

----------------------------------------

Benchmark Testing
ตัวอย่าง command: go test -benchmem -bench=BenchmarkFib10 -v -run=xxx
-run=xxx เป็น option บังคับเทส method BenchmarkFib10 อันเดียว (กรณีมีหลาย test method ใน 1 ไฟล์)
-benchmem ไว้โชว์ memory

ถ้าต้องการ coverage test: 
go test -coverprofile=coverage
go tool cover -html=coverage //เปิด html report

----------------------------------------

Build tags 
(import "go/build")

มีไว้คัดว่าจะ build/ไม่build file ไหนบ้าง

ตัวอย่าง (พิมพ์ที่ต้น file)
// +build linux,386 darwin,!cgo

แปลว่า
(linux AND 386) OR (darwin AND (NOT cgo))

ตอนสั่ง build ก็ -tag [tag name]